
//How to interface LVGL with ESP32:
1. Firstly I downloaded the Adruino IDE from the official Adruino website adruino.cc

2.I Opened the Arduino IDE, then I went to "File" -> "Preferences."
In the "Additional Boards Manager URLs" field, I added the following URL:https://dl.espressif.com/dl/package_esp32_index.json and then 
Clicked "OK" to close the Preferences window.

3. Then to Install ESP32 Boards so we can control the boards with the adruino  IDE. I went to "Tools" -> "Board" -> "Boards Manager."
and Searched for "esp32" and then installed the "ESP32 by Espressif Systems" package.

4.Install LVGL from Library Manager:
In the Arduino IDE, I went to "Sketch" -> "Include Library" -> "Manage Libraries."
I Searched for "lvgl" and installed the "lvgl" library by LVGL Community.

5.I Created a New Sketch:

By Opening the Arduino IDE,
Going to "File" -> "New" to create a new sketch.

6.Including The LVGL Library:

At the top of my Arduino sketch, I included the LVGL library:

#include <lvgl.h>

Now I can Write my LVGL-based GUI code in the Arduino sketch. 

7. Configure ESP32 Board:

I haven't done this yet because I don't have a board yet

//Is the Esp32 less difficult than the Raspberry pi?

During my research, I found out that the esp32 uses less power than the Raspberry pi, and therefore is more suitable for smaller projects, unlike the Raspberry pi which works best for larger projects. So with this in mind, for this project the Esp32 is less difficult than the Raspberry pi, and also during the configuration and interfacing, the Esp32 was way more easier than the raspberry pi.


//How to develop interface for the screen chosen

1. In the environment which we have already set up, we include our LVGL and display driver library before begining the code.

2. Then initialize the LVGL in the void setup(){}

3.Create user Interface elements using the LVGL functions, such as buttons, lavels, containers etc.

4. handle user input, like click using event.

5. Run the main loop in the void loop(){}

6. upload to the esp32 and test the interface on the display screen.